{"version":3,"sources":["Action.js","actionTypes.js","components/NumBtn.js","components/DotBtn.js","components/CalcBtn.js","components/Result.js","components/ClearAll.js","App.js","reducers/calculator.js","reducers/index.js","index.js"],"names":["onNumClick","number","type","onPlusClick","onMinusClick","onMultiplyClick","onDivideClick","onEditClick","onClearClick","onDotClick","NumBtn","numKey","onClick","dotBtn","dotKey","calcBtn","calcKey","Result","result","className","ClearAll","clearKey","App","this","props","calculator","actions","Fragment","showingResult","resultValue","inputValue","CalcBtn","DotBtn","react","connect","state","dispatch","bindActionCreators","initialAppState","operation","dotNumber","calculate","action","Number","reducer","combineReducers","store","createStore","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa2aa805.chunk.js","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const onNumClick=(number)=>({\r\n    type:actionTypes.INPUT_NUMBER,\r\n    number,\r\n});\r\nexport const onPlusClick=()=>({\r\n    type:actionTypes.PLUS,\r\n});\r\n\r\nexport const onMinusClick=()=>({\r\n    type:actionTypes.MINUS,\r\n});\r\n\r\nexport const onMultiplyClick=()=>({\r\n    type:actionTypes.MULTIPLY,\r\n});\r\n\r\nexport const onDivideClick=()=>({\r\n    type:actionTypes.DIVIDE,\r\n});\r\n\r\nexport const onEditClick=()=>({\r\n    type: actionTypes.EDIT,\r\n});\r\n\r\nexport const onClearClick=()=>({\r\n    type:actionTypes.CLEAR,\r\n});\r\n\r\nexport const onDotClick=()=>({\r\n    type:actionTypes.INPUT_DOT,\r\n});","export const INPUT_NUMBER=\"INPUT_NUMBER\";\r\nexport const INPUT_DOT=\"INPUT_DOT\";\r\nexport const PLUS=\"PLUS\";\r\nexport const MINUS=\"MINUS\";\r\nexport const MULTIPLY=\"MULTIPLY\";\r\nexport const DIVIDE=\"DIVIDE\";\r\n\r\nexport const EDIT=\"EDIT\";\r\nexport const CLEAR=\"CLEAR\";","import React from 'react';\r\n\r\n\r\nconst NumBtn = ({numKey,onClick}) => (\r\n<button onClick={onClick}>{numKey}</button>\r\n);\r\n\r\n\r\n\r\nexport default NumBtn;","import React from \"react\";\r\n\r\nconst dotBtn=({dotKey,onClick})=>(<button onClick={onClick}>{dotKey}</button>);\r\n\r\n\r\n\r\nexport default dotBtn;","import React from \"react\";\r\n\r\nconst calcBtn=({calcKey,onClick})=>(<button onClick={onClick}>{calcKey}</button>);\r\n\r\n\r\n\r\nexport default calcBtn;","import React from \"react\";\r\n\r\nconst Result = ({ result }) => (\r\n    <div className=\"resultValue\">\r\n        {result}\r\n    </div> );\r\n\r\n\r\nexport default Result;","import React from \"react\";\r\n\r\nconst ClearAll=({clearKey,onClick})=>(<button onClick={onClick}>{clearKey}</button>);\r\n\r\nexport default ClearAll;","import React, * as react from 'react';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport './App.css';\n\nimport * as actions from \"./Action\";\nimport NumBtn from \"./components/NumBtn\";\nimport DotBtn from \"./components/DotBtn\";\nimport CalcBtn from \"./components/CalcBtn\";\nimport Result from \"./components/Result\";\nimport ClearAll from \"./components/ClearAll\";\n\n\nclass App extends react.Component {\n  render() {\n    const { calculator, actions } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"calclator\">\n          <div>\n            <Result result={calculator.showingResult\n              ? calculator.resultValue : calculator.inputValue} />\n          </div>\n          <div className=\"topBtn\">\n            <ClearAll clearKey={\"AC\"} onClick={()=>actions.onClearClick()} />\n            <button></button>\n            <button></button>\n            <span className=\"opBtn\">\n              <CalcBtn calcKey={\"+\"} onClick={() => actions.onPlusClick()} />\n            </span>\n          </div>\n\n          <div>\n            <NumBtn numKey={1} onClick={() => actions.onNumClick(1)} />\n            <NumBtn numKey={2} onClick={() => actions.onNumClick(2)} />\n            <NumBtn numKey={3} onClick={() => actions.onNumClick(3)} />\n            <span className=\"opBtn\">\n              <CalcBtn calcKey={\"-\"} onClick={() => actions.onMinusClick()} />\n            </span>\n          </div>\n          <div>\n            <NumBtn numKey={4} onClick={() => actions.onNumClick(4)} />\n            <NumBtn numKey={5} onClick={() => actions.onNumClick(5)} />\n            <NumBtn numKey={6} onClick={() => actions.onNumClick(6)} />\n            <span className=\"opBtn\">\n              <CalcBtn calcKey={\"*\"} onClick={() => actions.onMultiplyClick()} />\n            </span>\n          </div>\n          <div>\n            <NumBtn numKey={7} onClick={() => actions.onNumClick(7)} />\n            <NumBtn numKey={8} onClick={() => actions.onNumClick(8)} />\n            <NumBtn numKey={9} onClick={() => actions.onNumClick(9)} />\n            <span className=\"opBtn\">\n              <CalcBtn calcKey={\"/\"} onClick={() => actions.onDivideClick()} />\n            </span>\n          </div>\n          <div>\n            <span className=\"underBtn\">\n              <NumBtn numKey={0} onClick={() => actions.onNumClick(0)} />\n              <DotBtn dotKey={\".\"} onClick={() => actions.onDotClick(\".\")} />\n            </span>\n            <CalcBtn calcKey={\"=\"} onClick={() => actions.onEditClick()} />\n            <button></button>\n\n          </div>\n          <div>\n\n          </div>\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  calculator: state.calculator,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n  };\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"../actionTypes\";\r\n\r\n\r\nconst initialAppState = {\r\n    inputValue: 0, //入力された値\r\n    operation: \"\", //演算子\r\n    resultValue: 0, //計算結果\r\n    dotNumber:false,//小数点\r\n    calculate: false, //計算を行うかの判断\r\n    showingResult: false, //結果を表示するかの判断\r\n};\r\n\r\nconst calculator = (state = initialAppState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.INPUT_NUMBER:\r\n            if(state.dotNumber===false){\r\n        　　　　return {\r\n                ...state,\r\n                inputValue: state.inputValue * 10 + action.number,\r\n                showingResult: false,\r\n                \r\n                };\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    inputValue: Number(state.inputValue +\".\"+action.number),\r\n                    dotNumber:false,\r\n                    showingResult:false,\r\n                };\r\n            }\r\n\r\n        case actionTypes.INPUT_DOT:\r\n            return{\r\n                ...state,\r\n                dotNumber:true,\r\n            }\r\n\r\n\r\n\r\n\r\n        case actionTypes.PLUS:\r\n            if (state.calculate === true) {\r\n                return {\r\n                    ...state,\r\n                    inputValue: 0,\r\n                    operation: \"+\",\r\n                    resultValue: state.resultValue + state.inputValue,\r\n                    showingResult: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    inputValue: 0,\r\n                    operation: \"+\",\r\n                    calculate: true,\r\n                    resultValue: state.inputValue,\r\n                    showingResult: true,\r\n                };\r\n            }\r\n\r\n        case actionTypes.MINUS:\r\n            if (state.calculate === true) {\r\n                return {\r\n                    ...state,\r\n                    inputValue: 0,\r\n                    operation: \"-\",\r\n                    resultValue: state.resultValue - state.inputValue,\r\n                    showingResult: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    inputValue: 0,\r\n                    operation: \"-\",\r\n                    calculate: true,\r\n                    resultValue: state.inputValue,\r\n                    showingResult: true,\r\n                };\r\n            }\r\n\r\n        case actionTypes.MULTIPLY:\r\n            if (state.calculate === true) {\r\n                return {\r\n                    ...state,\r\n                    inputValue: 0,\r\n                    operation: \"*\",\r\n                    resultValue: state.resultValue * state.inputValue,\r\n                    showingResult: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    inputValue: 0,\r\n                    operation: \"*\",\r\n                    calculate: true,\r\n                    resultValue: state.inputValue,\r\n                    showingResult: true,\r\n                }\r\n            }\r\n\r\n        case actionTypes.DIVIDE:\r\n            if (state.calculate === true) {\r\n                return {\r\n                    ...state,\r\n                    inputValue: 0,\r\n                    operation: \"/\",\r\n                    resultValue: state.resultValue / state.inputValue,\r\n                    showingResult: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    inputValue: 0,\r\n                    operation: \"/\",\r\n                    calculate: true,\r\n                    resultValue: state.inputValue,\r\n                    showingResult: true,\r\n                }\r\n            }\r\n\r\n        case actionTypes.CLEAR:\r\n            return {\r\n                inputValue: 0,\r\n                operation: \"\",\r\n                calculate: false,\r\n                dotNumber:false,\r\n                resultValue: 0,\r\n                showingResult: false,\r\n            };\r\n\r\n        case actionTypes.EDIT:\r\n            switch (state.operation) {\r\n                case \"+\":\r\n                    return {\r\n                        inputValue: state.resultValue + state.inputValue,\r\n                        operation: \"\",\r\n                        calculate: false,\r\n                        dotNumber:false,\r\n                        resultValue: state.resultValue + state.inputValue,\r\n                        showingResult: true,\r\n                    };\r\n\r\n                case \"-\":\r\n                    return {\r\n                        inputValue: state.resultValue - state.inputValue,\r\n                        operation: \"\",\r\n                        calculate: false,\r\n                        dotNumber:false,\r\n                        resultValue: state.resultValue - state.inputValue,\r\n                        showingResult: true,\r\n                    };\r\n                case \"*\":\r\n                    return {\r\n                        inputValue: state.resultValue * state.inputValue,\r\n                        operation: \"\",\r\n                        calculate: false,\r\n                        dotNumber:false,\r\n                        resultValue: state.resultValue * state.inputValue,\r\n                        showingResult: true,\r\n                    };\r\n                case \"/\":\r\n                    return{\r\n                        inputValue: state.resultValue / state.inputValue,\r\n                        operation: \"\",\r\n                        calculate: false,\r\n                        dotNumber:false,\r\n                        resultValue: state.resultValue / state.inputValue,\r\n                        showingResult: true, \r\n                    };    \r\n\r\n                default:\r\n                    return state;\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default calculator;","import { combineReducers } from \"redux\";\r\nimport calculator from \"./calculator\";\r\n\r\nconst reducer = combineReducers({\r\n    calculator,\r\n});\r\n\r\nexport default reducer;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from './App';\r\nimport reducer from \"./reducers\"\r\nimport './index.css';\r\n\r\nconst store = createStore(reducer);\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}